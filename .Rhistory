save(erg, file = "C:/Users/User/Desktop/Bachlorarbeit/erg2000.RData")
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/createData.R')
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/createData.R')
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/createData.R')
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/createData.R')
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/main.R')
erg=main(5,5,c(0.3),100)
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/main.R')
erg=main(5,5,c(0.3),100)
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/main.R')
erg=main(5,5,c(0.3),100)
erg=main(5,5,c(0.3),100)
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/main.R')
erg=main(5,5,c(0.3),100)
#Es wichtig die HMM Biblithek zuladen da sie nicht Standart mässig geladen wird dies muss vom benutzer angepasst werden
library("HMM", lib.loc="D:/Program Files (x86)/R-3.1.1/library")
#Die folgenden Sourcedateien liegen im selben ordner
source('./createData.R')
source('./Cluster.R')
source('./Modell.R')
source('./Detektion.R')
source('./main.R')
erg=main(5,5,c(0.3),100)
erg
erg=main(5,5,c(0.70),500)
erg=main(5,5,c(0.5,0.70),500)
erg=main(5,5,c(0.5,0.70),100)
erg
erg=main(5,5,c(0.60),10)
erg
erg=main(5:10,1:5 *5,c(0.2,0.3,0.4,0.5),500)
erg
erg[1,,,]
erg[,1,,]
erg[4,1,,]
save(erg,file="newerg")
save(erg,file="./newerg")
erg=main(5:10,1:5 *5,c(0.2,0.3,0.4,0.5),500)
library("HMM", lib.loc="D:/Program Files (x86)/R-3.1.1/library")
erg=main(5:10,1:5 *5,c(0.2,0.3,0.4,0.5),500)
print("initialisieren")
data=createData()
mu<-c(75,44,64,70,6,89,38,24,75) #Erwartungswerte
sigma<-c(30,15,40,60,5,40,18,15,30)#Standarabweiung
probality<-c(7.5,8.32,5.91,0.43,1.36,1.87,6.36,0.6,2.46)#Gewichtung der Einkaeufe
intervall=c(0,200)
repeatf=c(2,0.4,1.5,1.2,0.2,5,3,1.4,3)
data=IniData(data,mu,sigma,probality,repeatf,intervall)
clust=Cluster()
clust@Profil<-data
clust=iniCluster(clust,2000)
mod=initHMM(1:hidden, 1:emission,rep(1/hidden,hidden),#
(matrix(rep(1/(hidden),hidden*hidden),hidden))
,matrix(rep(1/(hidden),hidden*emission),emission))
library("HMM", lib.loc="D:/Program Files (x86)/R-3.1.1/library")
mod=initHMM(1:hidden, 1:emission,rep(1/hidden,hidden),#
(matrix(rep(1/(hidden),hidden*hidden),hidden))
,matrix(rep(1/(hidden),hidden*emission),emission))
mod=initHMM(1:hidden, 1:emission,rep(1/hidden,hidden),#
(matrix(rep(1/(hidden),hidden*hidden),hidden))
,matrix(rep(1/(hidden),hidden*emission),emission))
hidden=5
emission=3
hidden=5
hmm
mod
mod=initHMM(1:hidden, 1:emission,rep(1/hidden,hidden),#
(matrix(rep(1/(hidden),hidden*hidden),hidden))
,matrix(rep(1/(hidden),hidden*emission),emission))
mod
mod=initHMM(1:hidden, 1:emission,rep(1/hidden,hidden),#
(matrix(rep(1/(hidden),hidden*hidden),hidden))
,matrix(rep(1/(emission),hidden*emission),emission))
mod
mod = baumWelch(mod,getValues(cluster,100),15)
mod = baumWelch(mod,getValues(clust,100),15)
mod
erg
now=Sys.time
now=Sys.time
now2=Sys.time
now2-now
now$
;
now
now=Sys.time()
now2=Sys.time()
now2-now
now
as.numeric(now2-now)
timeTrain=timeTraining(5:10)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
timeTrain=timeTraining(5:10)
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/Training test.R')
timeTrain=timeTraining(5:10)
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/Training test.R')
timeTrain=timeTraining(5:10)
timeTrain
source('~/.active-rstudio-document')
[1:10]
1:10
c(10,20,50,100,200,500)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
timeTrain=timeTraining(5:10)
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/Training test.R')
timeTrain=timeTraining(5:10)
timeTrain
source('~/.active-rstudio-document')
timeTrain2=timeTraining(5:10)
timeTrain2
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/Training test.R')
timeTrain2=timeTraining(5:10)
timeTrain2
timeTrain2=timeTraining(5:10)
timeTrain2=timeTraining(5:10)
timeTrain2
hist3D(z=times,y = seq(5, 10, length.out = ncol(times)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",x = seq(10, 50, length.out = nrow(times)),xlab="Trainigsdaten",ylab="veteckte Zustände",zlab="Sekunden")
library("plot3D", lib.loc="D:/Program Files (x86)/R-3.1.1/library")
hist3D(z=times,y = seq(5, 10, length.out = ncol(times)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",x = seq(10, 50, length.out = nrow(times)),xlab="Trainigsdaten",ylab="veteckte Zustände",zlab="Sekunden")
hist3D(z=times,y = seq(5, 10, length.out = ncol(times)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",x =seq(10, 50, length.out = nrow(times)),xlab="Trainigsdaten",ylab="veteckte Zustände",zlab="Sekunden")
hist3D(z=timeTrain2,y = seq(5, 10, length.out = ncol(times)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",x =seq(10, 50, length.out = nrow(times)),xlab="Trainigsdaten",ylab="veteckte Zustände",zlab="Sekunden")
hist3D(z=timeTrain2,y = seq(5, 10, length.out = ncol(times)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",x =seq(10, 50, length.out = nrow(times)),xlab="Trainigsdaten",ylab="veteckte Zustände",zlab="Sekunden")
hist3D(z=timeTrain2,y = seq(5, 10, length.out = ncol(timeTrain2)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",x =seq(10, 50, length.out = nrow(timeTrain2)),xlab="Trainigsdaten",ylab="veteckte Zustände",zlab="Sekunden")
hist3D(z=timeTrain2,x = seq(5, 10, length.out = ncol(timeTrain2)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",y =seq(10, 50, length.out = nrow(timeTrain2)),ylab="Trainigsdaten",xlab="veteckte Zustände",zlab="Sekunden")
hist3D(z=timeTrain2,x = seq(5, 10, length.out = ncol(timeTrain2)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",y =seq(10, 50, length.out = nrow(timeTrain2)),ylab="Trainigsdaten",xlab="veteckte Zustände",zlab="Sekunden")
hist3D(z=timeTrain2,y = seq(5, 10, length.out = ncol(timeTrain2)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",x =seq(10, 50, length.out = nrow(timeTrain2)),xlab="Trainigsdaten",ylab="veteckte Zustände",zlab="Sekunden")
hist3D(z=timeTrain2,x = seq(5, 10, length.out = ncol(timeTrain2)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",y =seq(10, 50, length.out = nrow(timeTrain2)),ylab="Trainigsdaten",xlab="veteckte Zustände",zlab="Sekunden")
hist3D(z=timeTrain2,x = seq(5, 10, length.out = nrow(timeTrain2)),colvar=NULL,border = "black",phi = 20,theta = -35,ticktype = "detailed",y =seq(10, 50, length.out = ncol(timeTrain2)),ylab="Trainigsdaten",xlab="veteckte Zustände",zlab="Sekunden")
mod=initHMM(1:hidden, 1:emission)
mod
mod=initHMM(1:(hidden+1), 1:emission)
mod
data=createData()
mu<-c(75,44,64,70,6,89,38,24,75) #Erwartungswerte
sigma<-c(30,15,40,60,5,40,18,15,30)#Standarabweiung
probality<-c(7.5,8.32,5.91,0.43,1.36,1.87,6.36,0.6,2.46)#Gewichtung der Einkaeufe
intervall=c(0,200)
repeatf=c(2,0.4,1.5,1.2,0.2,5,3,1.4,3)
data=IniData(data,mu,sigma,probality,repeatf,intervall)
clust=Cluster()
clust@Profil<-data
clust=iniCluster(clust,2000)
trainIter=2000
observations=3
model=Model()
model
model=iniModel(model,clust,5,observations)
model
source('~/.active-rstudio-document')
model=iniModel(model,clust,5,observations)
model
c(1,2,3)
d=c(1,2,3)
sum(d)
dnorm(x,1+(2*(i-1)/(hidden-1)),0.75)
x<-seq(1,5,1)
fx<-c(fx,dnorm(x,1+(2*(i-1)/(hidden-1)),0.75))
c(dnorm(x,1+(2*(1-1)/(emission-1)),0.75))
fx=c(dnorm(x,1+(2*(1-1)/(emission-1)),0.75))
sum(fx)
x<-seq(1,emission,1)
d=c(dnorm(x,1+(2*(1-1)/(emission-1)),0.75))
fx<-d/sum(d)
fx
sum(fx)
model=iniModel(model,clust,5,observations)
model
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/Modell.R')
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/Modell.R')
model=iniModel(model,clust,5,observations)
model
source('~/.active-rstudio-document')
model=iniModel(model,clust,5,observations)
model
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/Modell.R')
model=iniModel(model,clust,5,observations)
model
source('~/.active-rstudio-document')
model=iniModel(model,clust,5,observations)
model
source('C:/Users/User/Desktop/Bachlorarbeit/R-program/Modell.R')
model=iniModel(model,clust,5,observations)
model
model=trainModel(model,trainIter)
model
model=Model()
model
model=iniModel(model,clust,hiddenstats,observations)
model=Model()
model=iniModel(model,clust,5,observations)
model
data=createData()
mu<-c(75,44,64,70,6,89,38,24,75) #Erwartungswerte
sigma<-c(30,15,40,60,5,40,18,15,30)#Standarabweiung
probality<-c(7.5,8.32,5.91,0.43,1.36,1.87,6.36,0.6,2.46)#Gewichtung der Einkaeufe
intervall=c(0,200)
repeatf=c(2,0.4,1.5,1.2,0.2,5,3,1.4,3)
data=IniData(data,mu,sigma,probality,repeatf,intervall)
clust=Cluster()
clust@Profil<-data
clust=iniCluster(clust,2000)
library("HMM", lib.loc="D:/Program Files (x86)/R-3.1.1/library")
trainIter=2000
observations=3
ret=c()
model=Model()
mod=initHMM(States = 5,Symbols = 3)
mod
mod=initHMM(1:hidden, 1:emission)
mod
mod2=baumWelch(mod,getValues(cluster,500),15)
mod2=baumWelch(mod,getValues(clust,500),15)
mod2
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
last=0
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
probas
for(i in 1:9){
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
ret=c(ret,probas)
}
rete=matrix(ret,9)
rete
for(last in 1:9){
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
ret=c(ret,probas)
}
rete=matrix(ret,9)
rete
ret=c()
for(last in 1:9){
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
ret=c(ret,probas)
}
rete=matrix(ret,9)
pseudo=runif(1,min=0,max=1)
i<-1
while(sum(probas[1:i])<=pseudo){
i<-i+1
}
rete
ret=c()
for(last in 1:9){
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
ret=c(ret,probas)
}
rete=matrix(ret,9)
pseudo=runif(1,min=0,max=1)
i<-1
while(sum(probas[1:i])<=pseudo){
i<-i+1
}
rete
ret=c()
for(last in 0:9){
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
ret=c(ret,probas)
}
rete=matrix(ret,9)
pseudo=runif(1,min=0,max=1)
i<-1
while(sum(probas[1:i])<=pseudo){
i<-i+1
}
rete
ret=c()
for(last in 0:9){
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
ret=c(ret,probas)
}
rete=matrix(ret,10)
pseudo=runif(1,min=0,max=1)
i<-1
while(sum(probas[1:i])<=pseudo){
i<-i+1
}
rete
ret=c()
for(last in 1:9){
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
ret=c(ret,probas)
}
rete=matrix(ret,9)
pseudo=runif(1,min=0,max=1)
i<-1
while(sum(probas[1:i])<=pseudo){
i<-i+1
}
sum(rete[1,])
sum(rete[,1])
rete[,1]
rete
t(rete)
Original=t(rete)
OriginalAIJ=t(rete)
ret=c()
for(last in 0){
probas=data@probality
if(last != 0)
probas[last]=data@probality[last]*data@repeatf[last]
s=sum(probas)
probas=probas/s
ret=c(ret,probas)
}
rete=matrix(ret,9)
pseudo=runif(1,min=0,max=1)
i<-1
while(sum(probas[1:i])<=pseudo){
i<-i+1
}
OriginalPI=t(rete)
rnorm(3)
rete=c()
for(i in 1:9){
for(n in 1:1000){
ret<-rnorm(1,data@mu[i],data@sigma[i])
while(ret>data@intervall[2]||data@intervall[1]>ret)
ret<-rnorm(1,data@mu[i],data@sigma[i])
rete=c(rete,ret)
}
}
rete
zeiger=c()
for(i in rete)
zeiger=c(zeiger,clusterValue(clust,rete))
zeiger=c()
for(i in rete)
zeiger=c(zeiger,clusterValue(clust,i))
zeiger
zeiger2=matrix(zeiger,9)
zeiger
zeiger2
zeiger2=matrix(zeiger,1000)
mat=matrix(rep(0,27),3)
mat
zeiger2[1,4]
zeiger2[4,1]
zeiger2
zeiger2[4,1]
mat=matrix(rep(0,27),9)
for(i in 1:9){
for(s in 1:1000){
if(zeiger2[s,i]==1)
mat[i,1]=mat[i,1]+1
if(zeiger2[s,i]==2)
mat[i,2]=mat[i,2]+1
if(zeiger2[s,i]==3)
mat[i,3]=mat[i,3]+1
}
}
mat
OriginalB=mat/1000
OriginalBij=mat/1000
save(OriginalAIJ,OriginalBij,OriginalPI,file="OriginalVerteilung"
)
Aif
OriginalAIJ
OriginalBij
mod
model
model=iniModel(model,clust,5,3)
model=trainModel(model,trainIter)
modelorg=initHMM1:hidden, 1:emission,OriginalPI,OriginalAIJ
emissionProbs=OriginalBij)
modelorg=initHMM1:hidden, 1:emission,OriginalPI,OriginalAIJ,
emissionProbs=OriginalBij)
modelorg=initHMM(1:5, 1:3,OriginalPI,OriginalAIJ,OriginalBij)
OriginalBij
OriginalPI
modelorg=initHMM(1:5, 1:3,t(OriginalPI),OriginalAIJ,OriginalBij)
OriginalPIi=c(OriginalPI)
OriginalPIi
modelorg=initHMM(1:5, 1:3,OriginalPIi,OriginalAIJ,OriginalBij)
modelorg=initHMM(1:9, 1:3,OriginalPIi,transProbs = OriginalAIJ,emissionProbs = OriginalBij)
model
seq=getValues(clust,5)
seq
seq=getValues(clust,1005)
size=5
testv1=c()
testvo=c()
for(i in 6:1005){
testv1=c(testv1,sum(exp(forward(model@mod$hmm,seq((i-5):i))[,size])))
testvo=c(testvo,sum(exp(forward(modelorg,seq((i-5):i))[,size])))
}
seq((i-5):i)
seq((i-5):i)
seq
seq((i-5):iseq=getValues(clust,1005)
size=5
testv1=c()
testvo=c()
for(i in 6:1005){
testv1=c(testv1,sum(exp(forward(model@mod$hmm,seq[(i-5):i])[,size])))
testvo=c(testvo,sum(exp(forward(modelorg,seq[(i-5):i])[,size])))
}
testv1
sum(testv1)
sum(testvo)
var(testv1)
var(testv1)*1000
var(c(1,2,3,4)
)
sum(abs(testvo-testv1))
sum((testvo-testv1))
sum(abs(testvo-testv1))
var(c(1,2,3,4)
)
var(testv1)
var(testv1)*100
var(testv1)sqr
sqrt(var(testv1))
sqrt(var(testv1))*100
sqrt(var(testvo))*100
sum(abs(testvo-testv1))/10
var((testvo-testv1))
var((testvo-testv1))*100
size=10
seq=getValues(clust,(size+1000))
testv11=c()
testvo1=c()
for(i in (size+1):(size+1000)){
testv11=c(testv1,sum(exp(forward(model@mod$hmm,seq[(i-size):i])[,size])))
testvo1=c(testvo,sum(exp(forward(modelorg,seq[(i-size):i])[,size])))
}
sum(testv11)
size=5
seq=getValues(clust,(size+1000))
testv11=c()
testvo1=c()
for(i in (size+1):(size+1000)){
testv11=c(testv1,sum(exp(forward(model@mod$hmm,seq[(i-size):i])[,size])))
testvo1=c(testvo,sum(exp(forward(modelorg,seq[(i-size):i])[,size])))
}
sum(testv11)
sum(testvo1)
var(testvo1)
var(testvo1)*100
var(testvo)*100
sum(testv1)
sum(testv11)
var(testvo)*100
var(testv1)*100
var(testvo1)*100
var(testv11)*100
sum(abs(testvo-testv1))
sum(abs(testvo-testv1))/10
sum(abs(testvo1-testv11))/10
var(abs(testvo-testv1))*100
var(abs(testvo1-testv11))*100
0.08126799/0.6445308
0.08130095/0.6556436
4.407073e-05
4.407073e-05/0.08126799
(4.407073e-05)/0.08126799
4.407073e-05*10
(4.407073e-05)/0.08126799
/10
(4.407073e-05)/0.08126799710
(4.407073e-05)/0.081267997/10
4.404998e-05/0.08130095
4.404998e-05/0.08130095/10
sqrt(5.422889e^{-4})
sqrt(5.422889e-04)
